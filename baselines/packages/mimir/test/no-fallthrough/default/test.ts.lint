export {};
declare const x: any, y: any;

switch (x) {
    case 1:
    case 2:
    case 3:
        console.log('few');
        break;
    case 0: {
        console.log('none');
        break;
    }
    default:
        console.log('many');
}

switch (x) {
    case 'foo':
        console.log('foo');
        break;
    case 'bar':
        if (y) {
            console.log('bar');
            break;
        } else
            console.log('not bar');
    case 'baz':
    ~~~~        [error no-fallthrough: Missing 'break' before 'case'.]
        for (const c of x) {
            console.log('baz');
            break;
        }
    case 'bas':
    ~~~~        [error no-fallthrough: Missing 'break' before 'case'.]
        x;
    default:
    ~~~~~~~  [error no-fallthrough: Missing 'break' before 'default'.]
}

switch (x) {
    case 1:
        // comment
    case 2:
        'statement';
        // comment
    case 3:
    ~~~~    [error no-fallthrough: Missing 'break' before 'case'.]
        'statement';
        // falls through
    case 4:
        'statement';
        //fallthrough: this is intended
    case 5:
        'statement';
        // fall through is necessary here
        // and here is some more explanation: ...
        /* and so on */
    case 6:
        'statement';
        // plenty
        // of
        // comments
        /* fallsthrough */
    default:
}

if (x) switch (x) {case 1: 'foo'; case 2: 'bar'}
                                  ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]
if (x) {
    switch (x) {case 1: 'foo'; case 2: 'bar'}
                               ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]
} switch (x) {case 1: 'foo'; case 2: 'bar'} "foo"; switch (x) {case 1: 'foo'; case 2: 'bar'} /*
                             ~~~~                                                               [error no-fallthrough: Missing 'break' before 'case'.]
                                                                              ~~~~              [error no-fallthrough: Missing 'break' before 'case'.]
 switch (x)
*/ switch (x) {case 1: 'foo'; case 2: 'bar'}
                              ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]
label: switch (x) {case 1: 'foo'; case 2: 'bar'}
                                  ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]

switch
(x) {case 1: 'foo'; case 2: 'bar'}
                    ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]
switch /* foo */ (x) {case 1: 'foo'; case 2: 'bar'}
                                     ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]
switch // foo
(x) {case 1: 'foo'; case 2: 'bar'}
                    ~~~~           [error no-fallthrough: Missing 'break' before 'case'.]

x./* comment */switch

let foo: {
    switch(x): void;
} = { switch(x) {}};

function testTyped(p: {kind: 'a', nested: boolean} | {kind: 'b' | 'c'}, fail: () => never) {
    switch (p.kind) {
      case 'a':
        switch (p.nested) {
          case true:
            return 1;
          case false:
            return 2;
        }
      case 'b':
      ~~~~      [error no-fallthrough: Missing 'break' before 'case'.]
        fail();
      case 'c':
      ~~~~      [error no-fallthrough: Missing 'break' before 'case'.]
        return 3;
    }
  }
