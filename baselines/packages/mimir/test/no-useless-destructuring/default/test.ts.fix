declare var v: any;
declare function get<T>(): T;

let {} = {};
({} = {});
({ v} = {prop: {}, v: {}});
({...{}} = {});
({a: {}, b: [], ...v} = get<Record<string, any>>());

let [] = [];
[] = [];
[{}, [], (v)] = [{}, [{nested: {}}, {nested: {}}], 1];
[] = new Array(10);
[v, ] = new Array(10);

function obj({}: Record<string, string>){}
function obj2({a: {}, b: [], ...c}: Record<string, string>){}
function arr([ ]: any[]){}

({...{v}} = get<Record<string, any>>());

({v,} = get<any>());
({v,} = get<any>());
({ v} = get<any>());

({v, ...{v}} = get<Record<string, any>>());

[v] = [1];
[v,] = [1, [], []];

function foo(...[a]: any[]) {}
