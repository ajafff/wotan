/** @deprecated */
class Foo {}
class Bar extends Foo {}
                  ~~~    [error deprecation: This variable is deprecated.]

new Foo();
    ~~~    [error deprecation: This variable is deprecated.]
new Bar();

/** @deprecated Use the other overload instead. */
function baz(): string;
function baz(v: string): string;
function baz(...args: string[]) {return args[0];}

baz;
~~~  [error deprecation: This variable is deprecated: Use the other overload instead. ]
baz();
~~~    [error deprecation: This variable is deprecated: Use the other overload instead. ]
~~~~~  [error deprecation: This signature is deprecated: Use the other overload instead. ]
baz('');
~~~      [error deprecation: This variable is deprecated: Use the other overload instead. ]

declare const bas: {
    /** @deprecated Use the other overload instead. */
    (): string;
    (v: string): string;
};

bas;
bas();
~~~~~  [error deprecation: This signature is deprecated: Use the other overload instead. ]
bas('');

/** @deprecated Variable is deprecated. */
declare const fn: typeof bas;
fn;
~~  [error deprecation: This variable is deprecated: Variable is deprecated. ]
fn();
~~    [error deprecation: This variable is deprecated: Variable is deprecated. ]
~~~~  [error deprecation: This signature is deprecated: Use the other overload instead. ]
fn('');
~~      [error deprecation: This variable is deprecated: Variable is deprecated. ]

declare let key: 'foo';
declare let key2: string;
declare let k: 'b' | 'a' | 'foo';

let obj = {
    /** @deprecated a*/
    a: '',
    b: '',
    /** @deprecated c*/
    'c': '',
    /** @deprecated d*/
    ['d']: '',
    /** @deprecated foo*/
    [key]: '',
    /** @deprecated something*/
    [key2]: '',
};

obj.a;
~~~~~  [error deprecation: This property is deprecated: a]
obj.b;
obj.c;
~~~~~  [error deprecation: This property is deprecated: c]
obj.d;
~~~~~  [error deprecation: This property is deprecated: d]
obj.foo;
~~~~~~~  [error deprecation: This property is deprecated: foo]
obj['a'];
~~~~~~~~  [error deprecation: This property is deprecated: a]
obj['b'];
obj['c'];
~~~~~~~~  [error deprecation: This property is deprecated: c]
obj['d'];
~~~~~~~~  [error deprecation: This property is deprecated: d]
obj['foo'];
~~~~~~~~~~  [error deprecation: This property is deprecated: foo]
obj[key];
~~~~~~~~  [error deprecation: This property is deprecated: foo]
obj.somethingElse;
obj['somethingElse'];
obj[key2];
obj[k];
~~~~~~  [error deprecation: This property is deprecated: a]
~~~~~~  [error deprecation: This property is deprecated: foo]

declare let obj2: {
    /** @deprecated */
    [key: string]: string;
};
obj2.a;
obj2['b'];
obj2[key];
