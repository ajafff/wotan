// @ts-check
const m = require('non-existent-module');
                  ~~~~~~~~~~~~~~~~~~~~~   [error typecheck: Cannot find module 'non-existent-module'.]
/** @type {string} */
let foo;
foo = 1;
~~~      [error typecheck: Type '1' is not assignable to type 'string'.]
console.clog(foo);
        ~~~~       [error typecheck: Property 'clog' does not exist on type 'Console'. Did you mean 'log'?]

/** @type {Array<Map<string, [boolean, string]>>} */
let bar;
let baz = foo;

/**
 *
 * @param {Array<Map<string, [number, string]>>} [param]
 * @returns {boolean}
 */
function fn(param) {
    return param[0];
    ~~~~~~~~~~~~~~~~ [error typecheck: Type 'Map<string, [number, string]>' is not assignable to type 'boolean'.]
    return true;
    ~~~~~~       [error typecheck: Unreachable code detected.]
}

/**
 * @param {string} param1
 * @returns {string}
             ~~~~~~  [error typecheck: A function whose declared type is neither 'void' nor 'any' must return a value.]
 */
function fn2(param1, param2) {
             ~~~~~~            [error typecheck: 'param1' is declared but its value is never read.]
                     ~~~~~~    [error typecheck: 'param2' is declared but its value is never read.]
                     ~~~~~~    [error typecheck: Parameter 'param2' implicitly has an 'any' type.]
    fn(bar);
       ~~~   [error typecheck: Argument of type 'Map<string, [boolean, string]>[]' is not assignable to parameter of type 'Map<string, [number, string]>[]'.\
  Type 'Map<string, [boolean, string]>' is not assignable to type 'Map<string, [number, string]>'.\
    Type '[boolean, string]' is not assignable to type '[number, string]'.\
      Type 'boolean' is not assignable to type 'number'.]
}

fn2();
~~~~~  [error typecheck: Expected 2 arguments, but got 0.]
