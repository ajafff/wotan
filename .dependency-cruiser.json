{
  "forbidden": [
    {
      "name": "not-to-test",
      "comment": "Don't allow dependencies from outside the test folder to test",
      "severity": "error",
      "from": {
        "pathNot": "^packages/[^/]+/test/"
      },
      "to": {
        "path": "^packages/[^/]+/test/"
      }
    },
    {
      "name": "not-outside-package",
      "comment": "Don't allow packages to anything outside of packages",
      "severity": "error",
      "from": {
        "path": "^packages/[^/]+/"
      },
      "to": {
        "dependencyTypes": [
          "local"
        ],
        "pathNot": "^packages/[^/]+/"
      }
    },
    {
      "name": "no-rules-or-formatters",
      "comment": "Within Wotan - disallow direct imports of rules and formatters",
      "severity": "error",
      "from": {
        "path": "packages/wotan/src/"
      },
      "to": {
        "path": "^packages/wotan/src/(rules|formatters)/"
      }
    },
    {
      "name": "no-circular",
      "severity": "error",
      "comment": "Warn in case there's circular dependencies",
      "from": {},
      "to": {
        "circular": true
      }
    },
    {
      "name": "no-deprecated-core",
      "comment": "Warn about dependencies on deprecated core modules.",
      "severity": "error",
      "from": {},
      "to": {
        "dependencyTypes": [
          "core"
        ],
        "path": "^(punycode|domain|constants|sys|_linklist)$"
      }
    },
    {
      "name": "no-core-in-library",
      "comment": "Warn about dependencies on core modules.",
      "severity": "error",
      "from": {
        "path": "^packages/[^/]+/(src|bin)/",
        "pathNot": "^packages/wotan/src/(cli.[jt]s$|services/default/)"
      },
      "to": {
        "dependencyTypes": [
          "core"
        ],
        "pathNot": "^path$"
      }
    },
    {
      "name": "no-service-impl",
      "comment": "Don't access the concretion of a service directly.",
      "severity": "error",
      "from": {
        "pathNot": "^packages/wotan/(test/|(src/di/default\\.module|index)\\.[jt]s$)"
      },
      "to": {
        "path": "^packages/wotan/src/services/default/"
      }
    },
    {
      "name": "no-deprecated-npm",
      "comment": "These npm modules are deprecated - find an alternative.",
      "severity": "warn",
      "from": {
        "pathNot": "(^|/)node_modules/"
      },
      "to": {
        "dependencyTypes": [
          "deprecated"
        ]
      }
    },
    {
      "name": "not-to-unresolvable",
      "comment": "Don't allow dependencies on modules dependency-cruiser can't resolve to files on disk (which probably means they don't exist)",
      "severity": "error",
      "from": {},
      "to": {
        "couldNotResolve": true
      }
    },
    {
      "name": "no-non-package-json",
      "severity": "error",
      "comment": "Don't allow dependencies to packages not in package.json (except from within node_modules)",
      "from": {
        "pathNot": "(^|/)node_modules/"
      },
      "to": {
        "dependencyTypes": [
          "unknown",
          "undetermined",
          "npm-no-pkg",
          "npm-unknown"
        ],
        "pathNot": "/ava/"
      }
    },
    {
      "name": "optional-deps-used",
      "severity": "info",
      "comment": "nothing serious - but just check you have some serious try/ catches around the import/ requires of these",
      "from": {
        "pathNot": "(^|/)node_modules/"
      },
      "to": {
        "dependencyTypes": [
          "npm-optional"
        ]
      }
    }
  ],
  "allowed": [
    {
      "from": {
        "path": "^packages/[^/]+/(src/|bin/|index.[jt]s$)"
      },
      "to": {
        "dependencyTypes": [
          "local",
          "npm",
          "npm-optional",
          "npm-peer",
          "core"
        ]
      }
    },
    {
      "from": {
        "path": "^(packages/[^/]+/test|scripts)/"
      },
      "to": {
        "dependencyTypes": [
          "local",
          "npm",
          "npm-optional",
          "npm-dev",
          "core"
        ]
      }
    },
    {
      "from": {
        "path": "^packages/[^/]+/test/"
      },
      "to": {
        "path": "^node_modules/(typescript|ava)/"
      }
    }
  ],
  "options": {
    "doNotFollow": "(^|/)node_modules/",
    "moduleSystems": ["cjs", "es6"]
  }
}
