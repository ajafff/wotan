export {};

let initialized!: boolean = true;
let any!: any;
       ~       [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]

let foo!: number;
foo!;
   ~  [error no-useless-assertion: This assertion is unnecesary as it doesn't change the type of the expression.]

let uninitialized: boolean;
uninitialized!;

let bar!: number | undefined;
       ~                      [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]

const key = 'prop';
const key2 = 'prop2'
abstract class Foo {
    static staticProp!: number | undefined;
    declare ambientProp!: number | undefined;
    initialized!: boolean = true;
    any!: any;
       ~       [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    foo!: number;
    bar!: number | undefined;
       ~                      [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    abstract baz!: number | undefined;
    'bas'!: number;
         ~          [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    ['foobar']!: number;
              ~          [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    ['foobaz']!: number | undefined;
              ~                      [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    [key]!: number;
         ~          [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    [key2]!: number | undefined;
          ~                      [error no-useless-assertion: This assertion is unnecessary as it has no effect on this declaration.]
    uninitialized: number;
    noType!;

    constructor() {
        this.initialized!;
                        ~  [error no-useless-assertion: This assertion is unnecesary as it doesn't change the type of the expression.]
        this.foo!;
                ~  [error no-useless-assertion: This assertion is unnecesary as it doesn't change the type of the expression.]
        this.uninitialized!;
                          ~  [error no-useless-assertion: This assertion is unnecesary as it doesn't change the type of the expression.]
    }
}

declare namespace foo {
    class Foo {
        prop!: number | undefined;
    }
    var ambient!: number | undefined;
}

declare class Ambient {
    prop!: number | undefined;
}

declare var ambient!: number | undefined;
var noType!;
