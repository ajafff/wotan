export {};

declare function get<T>(): T;

const foo = 'foo';

({
    x: 1,
    ~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...{x: 2, y: 2},
    ~~~~~~~~~~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    y: 1,
    ...{x: 3},
});

({
    foo,
    ~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...{foo},
});

({
    [foo]: 1,
    ~~~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...{[foo]: 2},
});

({
    '__@iterator': 1,
    [Symbol.iterator]: 1,
    ~~~~~~~~~~~~~~~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...{[Symbol.iterator]: 2},
});

({
    [get<string>()]: 1,
    ...{[get<string>()]: 2},
});

({
    [get<'foo'>()]: 1,
    ...{[get<'foo'>()]: 2},
    ~~~~~~~~~~~~~~~~~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...{[foo]: 3},
});

({
    foo: 1,
    bar: 1,
    ~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    baz: 1,
    ~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    ...get<{foo?: string, bar: number, baz: boolean | undefined}>(),
});

({
    foo: 1,
    bar: 1,
    ~~~~~~  [error no-duplicate-spread-property: Property is overridden later.]
    baz: 1,
    bas: 1,
    ...get<{foo: string, bar: number, bas: number} | {bar: number, baz: boolean, bas?: number}>(),
    ...Boolean() && {foo},
});

{
    let a, b;
    ({[foo]: a, foo: b, ...{}} = get<{foo: string}>());
}
